<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


	<!-- spring 配置文件，主要配置业务逻辑有关的 -->
			<!-- 默认扫描所有 改为false -->
	<context:component-scan base-package="com.bdqn">
		<!-- 除了控制器 其他都扫描 -->
		<context:exclude-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
	</context:component-scan>
	
	
	<!-- c3p0 -->
	<context:property-placeholder location="classpath:dbconfig.properties"/>
	<bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="pooledDataSource">
		<property value="${jdbc.jdbcUrl}" name="jdbcUrl"/>
		<property value="${jdbc.driverClass}" name="driverClass"/>
		<property value="${jdbc.user}" name="user"/>
		<property value="${jdbc.password}" name="password"/>
	</bean>
	
	<!-- 和mybatis 整合 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<!-- 指定mybatis全局配置文件的位置 -->
		<property value="classpath:mybatis-config.xml" name="configLocation"/>
		<property name="dataSource" ref="pooledDataSource"/>
		<!-- 指定mybatis，mapper文件的位置 -->
		<property value="classpath:mapper/*.xml" name="mapperLocations"/>
	</bean>
	
	<!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!--扫描所有dao接口的实现，加入到ioc容器中 -->
	<property value="com.bdqn.ssmweb.dao" name="basePackage"/>
	</bean>
			
			<!-- 配置一个可以执行批量的sqlSession -->
		<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<constructor-arg value="BATCH" name="executorType"/>
		</bean>
		<!-- ===============事务控制的配置 ================-->
		<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
		<!--控制住数据源 -->
		
		<property name="dataSource" ref="pooledDataSource"/>
		</bean>
		<!--开启基于注解的事务，使用xml配置形式的事务（必要主要的都是使用配置式） -->
		<aop:config>
		
			<!-- 切入点表达式 -->
			<aop:pointcut expression="execution(* com.atguigu.crud.service..*(..))" id="txPoint"/>
			
			<!-- 配置事务增强 -->
			<aop:advisor pointcut-ref="txPoint" advice-ref="txAdvice"/>
		</aop:config>
		
		<!--配置事务增强，事务如何切入 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
			<!-- 所有方法都是事务方法 -->
			<tx:method name="*"/>
			
			<!--以get开始的所有方法 -->
			<tx:method name="get*" read-only="true"/>
			</tx:attributes>
		</tx:advice>
		
		<!-- Spring配置文件的核心点（数据源、与mybatis的整合，事务控制） -->
	
	
	
</beans>
